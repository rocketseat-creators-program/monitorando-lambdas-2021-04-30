service: serverless-rocketseat
frameworkVersion: '2'

plugins:
  - serverless-layers
  - serverless-deployment-bucket
  - serverless-resources-env

custom:
  serverless-layers:
    dependenciesPath: ./package.json

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  memorySize: 128
  tracing:
    apiGateway: true
    lambda: true
  deploymentBucket:
    name: articles-rocketseat-deployment-bucket
    serverSideEncryption: AES256
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["ArticlesDynamoDBTable", "Arn" ] }
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource:
        - "*"

functions:
  createArticle:
    handler: src/handler.create
    events:
      - http:
          path: /article
          method: POST

  getArticle:
    handler: src/handler.get
    custom:
      env-resources:
        - ArticleRequestedTopic
    events:
      - http:
          path: /article/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    ArticlesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: articleId
            AttributeType: S
        KeySchema:
          -
            AttributeName: articleId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: articles

    ArticleRequestedTopic:
        Type: AWS::SNS::Topic
        Properties:
          DisplayName: 'Topic used for publishing when articles are requested'
          TopicName: ArticleRequestedTopic
